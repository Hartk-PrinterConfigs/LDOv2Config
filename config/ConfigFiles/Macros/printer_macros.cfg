###########################
##### PRINTER MACROS  #####
###########################
[gcode_macro PRINT_START]
gcode:
    # Parameters
    {% set BED = params.BED_TEMP|int %}
    {% set EXTRUDER = params.EXTRUDER_TEMP|int %}
    {% set MATERIAL = params.MATERIAL|default("XXX")|string %}
    {% set FANSPD = printer["gcode_macro MACROS_VARS"].circ_fan_speed|default(0)%}
    {% set PROBETMP = printer["gcode_macro MACROS_VARS"].probe_temp|default(0)%}
    BED_MESH_CLEAR
    SET_GCODE_OFFSET Z=0
    CHOME
    G0 Z2
    SET_TEMP HEATER="bed" TEMP={BED} ; set final bed temp
    SET_TEMP HEATER="extruder" TEMP={EXTRUDER}; set hotend to 150 for heatsoak
    SET_TEMP HEATER="bed" TEMP={BED} WAIT=1 ;wait final bed temp
    WAIT TIME={60} ;wait at least 1 minute for temps to settle 
    MATERIAL_PA MATERIAL={MATERIAL}

    DISPLAYTEXT TEXT="{TEXT}"
    SET_FAN
    G28 Z METHOD=CONTACT CALIBRATE=0 
    QUAD_GANTRY_LEVEL
  #  BED_MESH_CALIBRATE ADAPTIVE=1 RUNS=2
    PARK
    SET_TEMP HEATER="extruder" TEMP={EXTRUDER} WAIT=1 ;wait final extruder temp
   {% if MATERIAL == "ABS" %}
     BEDFANSFAST
     TEMPERATURE_WAIT SENSOR="temperature_sensor chamber" MINIMUM={45}
     SET_FAN SPEED={FANSPD} ;Turn fan on full blast to help circulate the air
     
   {% endif %}
    RESET_EXTRUDER
    G28 Z METHOD=CONTACT CALIBRATE=1
    SET_GCODE_OFFSET Z=0.04
    PURGE
    TOGGLE_COUNTER
    DISPLAYTEXT TEXT="Printing..."
 
[gcode_macro PRINT_END]
gcode:
    TOGGLE_COUNTER
    CLEAR_BUFFER                           ; wait for buffer to clear
    RESET_EXTRUDER                         ; zero the extruder
    ENDING_RETRACTION                ; retract filament
    TURN_OFF_HEATERS
    ABSOLUTE_COORDINATES                                      ; absolute positioning
    PARK_AT_PRINT_END
    SET_FAN                                
    BED_MESH_CLEAR
    DISPLAYTEXT TEXT="Print finished!"
    WLED_OFF
    BEDFANSOFF

[force_move]
enable_force_move: True

[gcode_macro HOME]
gcode:
   DISPLAYTEXT TEXT="Homing"
   {% set PARAMS = params.PARAMS|default("")|string %}
   {% set home_z = 'X' not in PARAMS and 'Y' not in PARAMS and 'Z' in PARAMS or 'z' in PARAMS %}
   {% set home_xy = 'X' in PARAMS and 'Y' in PARAMS and 'Z' not in PARAMS or 'z' not in PARAMS %}
   
   {% if home_z %}
     {% if 'xy' not in printer.toolhead.homed_axes %}
       G28
     {% else %}
       G28 Z
     {% endif %}
   {% elif home_xy %}
     G28 XY 
   {% else %}
   G28
   DISPLAYTEXT TEXT="Homing XYZ"
   {% endif %}
   DISPLAYTEXT TEXT="Honey, Im Home!"

 # Conditional G28
[gcode_macro CHOME]
gcode:
  {% if printer.toolhead.homed_axes != "xyz" %}
   HOME
  {% else %}
   G28 Z
  {% endif %}

[gcode_macro GET_HOMED_AXES]
gcode:
    { action_respond_info('homed axes: %s' % printer.toolhead.get('homed_axes').__repr__()) }
     
#################################
######### HOUR COUNTER ##########
#################################

[gcode_macro TOGGLE_COUNTER]
gcode:
  SET_PIN PIN=hourCounter VALUE={(not printer['output_pin hourCounter'].value)|int}
   
[gcode_macro COUNTER_OFF]
gcode: 
    Set_pin pin=hourCounter value=0

[gcode_macro COUNTER_ON]
gcode: 
    Set_pin pin=hourCounter value=1

[gcode_macro M106]                                     
rename_existing: M106.1                        
variable_lock_flag: 0                                
gcode:                                   
    {% if not lock_flag or ('L' in params and 'S' in params) %}
        M106.1 S{params.S|default(255)|int}
    {% elif not 'L' in params %}
        {action_respond_info('"M106 %s": Ignored, fan speed is locked. Run "M106 L0" to unlock.' % rawparams)}
    {% endif %}         
    {% if 'L' in params %}
        {% set is_locked = 1 if params.L|default(0)|int else 0 %}
        SET_GCODE_VARIABLE MACRO=M106 VARIABLE=lock_flag VALUE={is_locked}
        {action_respond_info('"M106": Fan speed %s' % ('locked' if is_locked else 'unlocked'))}
    {% endif %}


[gcode_macro lock_fan]
gcode:   M106 S0 L1

[gcode_macro unlock_fan]
gcode:   M106 S0 L0

##############################
######### NEVERMORE ##########
##############################
#[gcode_macro Nevermore_on]
#gcode:
#    Set_pin pin=nevermore value=.75

#[gcode_macro Nevermore_off]
#gcode:
  #  Set_pin pin=nevermore value=0

###################################
######### CONTROLLER FAN ##########
###################################

#[gcode_macro TOGGLE_CONTROLLER_FAN]
#gcode:
 # SET_PIN PIN=contro VALUE={(not printer['output_pin hourCounter'].value)|int}
  #SET_FAN_SPEED FAN=controller_fan SPEED={(not printer['fan_generic controller_fan'].value)|int}
 # M117 {(not printer['fan_generic controller_fan'].value)|int}
# [gcode_macro CTRLFAN_ON]
# gcode:    
#    {% set FANSPD = printer["gcode_macro MACROS_VARS"].controllerFanSpeed|float%}
#    Set_pin pin=controller_fan value={FANSPD}

# [gcode_macro CTRLFAN_OFF]
# gcode:
#     Set_pin pin=controller_fan value=0

