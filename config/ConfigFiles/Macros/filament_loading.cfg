##### filament loading Variables #####
[gcode_macro FILAMENT_VARS]
variable_extruder_temp:          265
variable_ending_length:          -25
variable_purge_length:           40
variable_prepurge_length:        60
variable_purge_retries:           5
variable_current_purge_retries:   0
variable_purge_flow_rate:         20
gcode:

[gcode_macro _LOW_TEMP_CHECK]
description: Check the nozzle is at temperature and heat it if needed
gcode: 
    {% set T = params.T|default(printer["gcode_macro FILAMENT_VARS"].extruder_temp)|float %}
    {% if printer.extruder.target != 0 %}
        {% if printer.extruder.temperature < printer.extruder.target %}
            SET_TEMP HEATER="extruder" TEMP={printer.extruder.target|float} WAIT=1
        {% endif %}
    {% else %}
        {% if printer.extruder.target < T %}
            SET_TEMP HEATER="extruder" TEMP={T} WAIT=1
        {% endif %}
    {% endif %}

[gcode_macro _PRELOAD_FILAMENT_START]
variable_loaded: False	
gcode:
    {% set PURGE = printer["gcode_macro FILAMENT_VARS"].prepurge_length%}
     _LOW_TEMP_CHECK
     {% for step in range(3) %}
          M400 # Wait for buffer to clear
            {% if not printer['filament_switch_sensor post'].filament_detected %}
              G1 E5 F1200
            {% endif %}
     {% endfor %}
     
    _PRELOAD_FILAMENT_PURGE

[gcode_macro _PRELOAD_FILAMENT_END]   
gcode:
     {% set RETRACT = printer["gcode_macro FILAMENT_VARS"].ending_length|default(0)%}
     G1 E{RETRACT} F1800 
     _PRELOAD_FILAMENT_PROMPT_END
    
[gcode_macro _PRELOAD_FILAMENT_PURGE]   
gcode:
    {% set PURGE = printer["gcode_macro FILAMENT_VARS"].purge_length%}
    {% set MAX_RETRIES = printer["gcode_macro FILAMENT_VARS"].purge_retries%}
    {% set FLOW = printer["gcode_macro FILAMENT_VARS"].purge_flow_rate%}
    {% set CURRENT = printer["gcode_macro FILAMENT_VARS"].current_purge_retries %}
    {% set FSPEED = (60*FLOW)/2.405 %}
    M83
    {% if CURRENT < MAX_RETRIES %}
      M400 # Wait for buffer to clear
      G1 E{PURGE} F{FSPEED}
     _PRELOAD_FILAMENT_PROMPT_START
     {% else %}
    _PRELOAD_FILAMENT_PROMPT_ERROR
    {% endif %}

[gcode_macro _PRELOAD_FILAMENT_PROMPT_START]
gcode:
    {% set RETRIES = printer["gcode_macro FILAMENT_VARS"].current_purge_retries %}
    SET_GCODE_VARIABLE MACRO=MACROS_VARS VARIABLE=current_purge_retries VALUE={ RETRIES + 1 }    
    RESPOND TYPE=command MSG="action:prompt_begin Question"
    RESPOND TYPE=command MSG="action:prompt_text Is the filament loaded correctly"
    RESPOND TYPE=command MSG="action:prompt_button Yes|_PRELOAD_FILAMENT_END"
    RESPOND TYPE=command MSG="action:prompt_button No|_PRELOAD_FILAMENT_PURGE"
    RESPOND TYPE=command MSG="action:prompt_show"

[gcode_macro _PRELOAD_FILAMENT_PROMPT_ERROR]
gcode:
    RESPOND TYPE=command MSG="action:prompt_begin Error:"
    RESPOND TYPE=command MSG="action:prompt_text Maximum number of retries, Check toolhead"
    RESPOND TYPE=command MSG="action:prompt_button Ok|_PRELOAD_FILAMENT_PROMPT_END"
    RESPOND TYPE=command MSG="action:prompt_show"

[gcode_macro _PRELOAD_FILAMENT_PROMPT_END]
gcode:
    RESPOND TYPE=command MSG="action:prompt_end"
    SET_GCODE_VARIABLE MACRO=MACROS_VARS VARIABLE=current_purge_retries VALUE=0
   

[gcode_macro FS_ENABLE]
description: Enable Post Filament Sensor
gcode:
  SET_FILAMENT_SENSOR SENSOR=post ENABLE=1

[gcode_macro FS_DISABLE] 
description: Disable Post Filament Sensor
gcode:
  SET_FILAMENT_SENSOR SENSOR=post ENABLE=0

 