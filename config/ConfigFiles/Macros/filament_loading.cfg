##### filament loading Variables #####
[gcode_macro FILAMENT_VARS]
variable_extruder_temp:          265
variable_ending_length:          -25
variable_purge_length:           40
variable_prepurge_length:        60
variable_purge_retries:           5
variable_current_purge_retries:   0
variable_purge_flow_rate:         20
gcode:




##### filament sensors #####

[filament_switch_sensor post]
switch_pin: ^nhk:FS
pause_on_runout: False

[filament_switch_sensor pre]
switch_pin: ^nhk:X_ENDSTOP
pause_on_runout: False
insert_gcode:
  {% set OriginalState = printer.print_stats.state %}
  {% if not (OriginalState == "printing") %}
     {% if not printer['filament_switch_sensor pre'].filament_detected and not printer['filament_switch_sensor post'].filament_detected  %}
      RESPOND MSG="Filament inserted"
     _PRELOAD_FILAMENT_START
     {% elif not printer['filament_switch_sensor pre'].filament_detected and printer['filament_switch_sensor post'].filament_detected%}
     RESPOND MSG="Please remove filament first"
     {% endif %}
  {% else %}
  respond msg="filam"
  {% endif %}
  
runout_gcode:
 {% set CURRENT_ACCEL = printer.toolhead.max_accel %} 
 {% set CURRENT_TEMP = printer['extruder'].target %} 
 {% set OriginalState = printer.print_stats.state %}
 {% if OriginalState == "printing" and printer['filament_switch_sensor post'].filament_detected and not printer['filament_switch_sensor pre'].filament_detected %}
   PAUSE
   RESPOND TYPE=error msg="FILAMENT RUNOUT !!"
   _FS_DISABLE
   _UNLOAD_FILAMENT_START
   _FS_ENABLE
 {% endif %}

 
[gcode_macro _LOW_TEMP_CHECK]
description: Check the nozzle is at temperature and heat it if needed
gcode: 
    {% set T = params.T|default(printer["gcode_macro FILAMENT_VARS"].extruder_temp)|float %}
    {% if printer.extruder.target != 0 %}
        {% if printer.extruder.temperature < printer.extruder.target %}
            SET_TEMP HEATER="extruder" TEMP={printer.extruder.target|float} WAIT=1
        {% endif %}
    {% else %}
        {% if printer.extruder.target < T %}
            SET_TEMP HEATER="extruder" TEMP={T} WAIT=1
        {% endif %}
    {% endif %}

##### Loading Filament Macros #####
[gcode_macro _PRELOAD_FILAMENT_START]
variable_loaded: False	
gcode:
     SAVE_GCODE_STATE NAME=LOAD_FILAMENT_state
     _LOW_TEMP_CHECK
     {% for step in range(10) %}
      _PRELOAD_FILAMENT_MOVE_TO_POST_SENSOR
     {% endfor %}
    _PRELOAD_FILAMENT_PURGE

[gcode_macro _PRELOAD_FILAMENT_MOVE_TO_POST_SENSOR] 
gcode:
      M400 # Wait for buffer to clear
      {% if not printer['filament_switch_sensor post'].filament_detected %}
        G1 E5 F1200
      {% endif %}
    
[gcode_macro _PRELOAD_FILAMENT_PURGE]   
gcode:
    {% set PURGE = printer["gcode_macro FILAMENT_VARS"].purge_length%}
    {% set MAX_RETRIES = printer["gcode_macro FILAMENT_VARS"].purge_retries%}
    {% set FLOW = printer["gcode_macro FILAMENT_VARS"].purge_flow_rate%}
    {% set CURRENT = printer["gcode_macro FILAMENT_VARS"].current_purge_retries %}
    {% set FSPEED = (60*FLOW)/2.405 %}
    M83
    {% if CURRENT < MAX_RETRIES %}
      M400 # Wait for buffer to clear
      G1 E{PURGE} F{FSPEED}
     _PRELOAD_FILAMENT_PROMPT_START
     {% else %}
    _PRELOAD_FILAMENT_PROMPT_ERROR
    {% endif %}

[gcode_macro _PRELOAD_FILAMENT_PROMPT_START]
gcode:
    {% set RETRIES = printer["gcode_macro FILAMENT_VARS"].current_purge_retries %}
    SET_GCODE_VARIABLE MACRO=MACROS_VARS VARIABLE=current_purge_retries VALUE={ RETRIES + 1 }    
    RESPOND TYPE=command MSG="action:prompt_begin Question"
    RESPOND TYPE=command MSG="action:prompt_text Is the filament loaded and extruding correctly?"
    RESPOND TYPE=command MSG="action:prompt_button Yes|_PRELOAD_FILAMENT_END"
    RESPOND TYPE=command MSG="action:prompt_button No|_PRELOAD_FILAMENT_PURGE"
    RESPOND TYPE=command MSG="action:prompt_show"

[gcode_macro _PRELOAD_FILAMENT_PROMPT_ERROR]
gcode:
    RESPOND TYPE=command MSG="action:prompt_begin Error:"
    RESPOND TYPE=command MSG="action:prompt_text Maximum number of retries, Check toolhead"
    RESPOND TYPE=command MSG="action:prompt_button Ok|_PRELOAD_FILAMENT_PROMPT_END"
    RESPOND TYPE=command MSG="action:prompt_show"

[gcode_macro _PRELOAD_FILAMENT_PROMPT_END]
gcode:
    RESPOND TYPE=command MSG="action:prompt_end"
    SET_GCODE_VARIABLE MACRO=MACROS_VARS VARIABLE=current_purge_retries VALUE=0
    RESTORE_GCODE_STATE NAME=UNLOAD_FILAMENT_state

[gcode_macro _PRELOAD_FILAMENT_END]   
gcode:
     {% set RETRACT = printer["gcode_macro FILAMENT_VARS"].ending_length|default(0)%}
     G1 E{RETRACT} F1800 
     _PRELOAD_FILAMENT_PROMPT_END

##### Unloading Filament Macros #####
[gcode_macro _UNLOAD_FILAMENT_START]
variable_loaded: False	
gcode:
     _LOW_TEMP_CHECK
     _UNLOAD_FILAMENT_PROMPT_START
    
[gcode_macro _UNLOAD_FILAMENT_PROMPT_START]
gcode:
    {% set RETRIES = printer["gcode_macro FILAMENT_VARS"].current_purge_retries %}
    RESPOND TYPE=command MSG="action:prompt_begin Notice:"
    RESPOND TYPE=command MSG="action:prompt_text Filament runout triggered, press ok to unload filament."
    RESPOND TYPE=command MSG="action:prompt_button Ok|UNLOAD_FILAMENT"
    RESPOND TYPE=command MSG="action:prompt_show"

[gcode_macro UNLOAD_FILAMENT]
gcode:
    {% set TEMP = params.TEMP|default(230)|float %}
    {% set DISTANCE = params.DISTANCE|default(105)|float %}

    M400 #CLEAR_BUFFER
    SAVE_GCODE_STATE NAME=UNLOAD_FILAMENT_state
    _LOW_TEMP_CHECK T={TEMP}
    M82 #ABSOLUTE_EXTRUSION
    ; Filament tip shaping sequence
    G92 E0 #RESET_EXTRUDER
    G1 E2 F3600
    G1 E0 F3600
    G1 E3 F3600
    G1 E0 F3600
    G1 E4 F3600
    G1 E0 F3600

    M83 #RELATIVE_EXTRUSION
    G1 E-20 F3600
    G4 P3000
    G1 E{DISTANCE|float * -1} F3000
    RESTORE_GCODE_STATE NAME=UNLOAD_FILAMENT_state

[gcode_macro _FS_ENABLE]
description: Enable Post Filament Sensor
gcode:
  SET_FILAMENT_SENSOR SENSOR=post ENABLE=1

[gcode_macro _FS_DISABLE] 
description: Disable Post Filament Sensor
gcode:
  SET_FILAMENT_SENSOR SENSOR=post ENABLE=0

 