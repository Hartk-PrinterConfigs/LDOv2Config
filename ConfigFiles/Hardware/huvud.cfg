## RP2040-Toolhead
[mcu th]
serial:  /dev/serial/by-id/usb-Klipper_stm32f103xe_56FF68066688574956310787-if00 #huvud
restart_method: command

#####################################################################
#   Extruder
#####################################################################

[extruder]
sensor_type: PT1000
#sensor_type: 
sensor_pin: th:PA0
pullup_resistor: 2200
nozzle_diameter: 0.400
filament_diameter: 1.75
heater_pin: th:PA6 # PA2
min_temp: -273
max_temp: 300
max_power: 1.0
min_extrude_temp: 0
#control = pid
#pid_kp = 26.213
#pid_ki = 1.304
#pid_kd = 131.721
pressure_advance: 0.045
pressure_advance_smooth_time: 0.040


#######################
#### E_STEPPER.CFG ####
#######################

## EXTRUDER
[extruder]
step_pin: th:PB3
dir_pin: !th:PB4
enable_pin: !th:PB5
########
## G2 ##
########
#rotation_distance: 47.088 
#gear_ratio: 9:1
#microsteps: 16
########
full_steps_per_rotation: 200

#########
## CW2 ##
#########
#rotation_distance: 22.225372078  
rotation_distance: 22.6789511   #Bondtech 5mm Drive Gears#Clockwork2
gear_ratio: 50:10             
microsteps: 32
#########

full_steps_per_rotation: 200   
max_extrude_only_distance: 1150
max_extrude_cross_section: 5


[neopixel sb_leds]
pin: th:PA14
#   The pin connected to the neopixel. This parameter must be provided.
chain_count: 1
#   The number of Neopixel chips that are "daisy chained" to the
#   provided pin. The default is 1 (which indicates only a single
#   Neopixel is connected to the pin).
color_order: GRBW
#   Set the pixel order required by the LED hardware. Options are GRB,
#   RGB, GRBW, or RGBW. The default is GRB.
initial_RED: 0.0
initial_GREEN: 1.0
initial_BLUE: 0.0
initial_WHITE: 0.0

## EXTRUDER MOTOR
[tmc2209 extruder]
uart_pin: th:PA10
interpolate: false
tx_pin: th:PA9
run_current: 0.6
sense_resistor: 0.110
stealthchop_threshold: 0



## HOT END FAN
[heater_fan hotend_fan]
pin: th:PA8
#tachometer_pin: th:PA8
#tachometer_ppr: 2
max_power: 1.0
kick_start_time: 0.5
heater: extruder
heater_temp: 50.0

## PART COOLING FAN
[fan]
pin: th:PA7
#tachometer_pin: th:PA7
#tachometer_ppr: 2
kick_start_time: 0.5
off_below: 0.10


[resonance_tester]
accel_chip: adxl345
probe_points:
    175,175,20 # an example
accel_per_hz: 150


[adxl345]
cs_pin: th:PB1

[probe]
pin: th:PB12
x_offset: 0
#y_offset: 0
y_offset: 19.75
#z_offset: -1.440
samples: 1
samples_result: median
sample_retract_dist: 3.0
samples_tolerance: 0.006
samples_tolerance_retries: 5
drop_first_result: true
speed: 10
lift_speed: 30
# activate_gcode:
#     {% set PROBE_TEMP = 150 %}
#     {% set MAX_TEMP = PROBE_TEMP + 5 %}
#     {% set ACTUAL_TEMP = printer.extruder.temperature %}
#     {% set TARGET_TEMP = printer.extruder.target %}

#     {% if TARGET_TEMP > PROBE_TEMP %}
#         { action_respond_info('Extruder temperature target of %.1fC is too high, lowering to %.1fC' % (TARGET_TEMP, PROBE_TEMP)) }
#         M109 S{ PROBE_TEMP }
#     {% else %}
#         # Temperature target is already low enough, but nozzle may still be too hot.
#         {% if ACTUAL_TEMP > MAX_TEMP %}
#             { action_respond_info('Extruder temperature %.1fC is still too high, waiting until below %.1fC' % (ACTUAL_TEMP, MAX_TEMP)) }
#             TEMPERATURE_WAIT SENSOR=extruder MAXIMUM={ MAX_TEMP }
#         {% endif %}
#     {% endif %}

# [adxl345_probe]
# probe_pin: th:PB0
# int_pin: int1 # select either int1 or int2, depending on your choice of wiring
# tap_thresh: 1000  # this needs to be tuned
# tap_dur: 0.1 # this needs to be tuned
# speed: 30 # this needs to be tuned
# # Adjust this to your liking
# samples: 3
# sample_retract_dist: 3.0
# samples_result: median
# samples_tolerance: 0.01
# samples_tolerance_retries: 20
# x_offset: 0
# y_offset: 0
# z_offset: 0
# activate_gcode:
#     {% set PROBE_TEMP = 150 %}
#     {% set MAX_TEMP = PROBE_TEMP + 5 %}
#     {% set ACTUAL_TEMP = printer.extruder.temperature %}
#     {% set TARGET_TEMP = printer.extruder.target %}

#     {% if TARGET_TEMP > PROBE_TEMP %}
#         { action_respond_info('Extruder temperature target of %.1fC is too high, lowering to %.1fC' % (TARGET_TEMP, PROBE_TEMP)) }
#         M109 S{ PROBE_TEMP }
#     {% else %}
#         # Temperature target is already low enough, but nozzle may still be too hot.
#         {% if ACTUAL_TEMP > MAX_TEMP %}
#             { action_respond_info('Extruder temperature %.1fC is still too high, waiting until below %.1fC' % (ACTUAL_TEMP, MAX_TEMP)) }
#             TEMPERATURE_WAIT SENSOR=extruder MAXIMUM={ MAX_TEMP }
#         {% endif %}
#     {% endif %}
